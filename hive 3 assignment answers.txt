1. Download vechile sales data -> https://github.com/shashank-mishra219/Hive-Class/blob/main/sales_order_data.csv

2. Store raw data into hdfs location

3. Create a internal hive table "sales_order_csv" which will store csv data sales_order_csv .. make sure to skip header row while creating table

4. Load data from hdfs path into "sales_order_csv" 

5. Create an internal hive table which will store data in ORC format "sales_order_orc"

6. Load data from "sales_order_csv" into "sales_order_orc"


Perform below menioned queries on "sales_order_orc" table :

a. Calculatye total sales per year
b. Find a product for which maximum orders were placed
c. Calculate the total sales for each quarter
d. In which quarter sales was minimum
e. In which country sales was maximum and in which country sales was minimum
f. Calculate quartelry sales for each city
h. Find a month for each year in which maximum number of quantities were sold

Answr down


I have transferred csv file using filezilla to cloudera

local location
/tmp/hive_class/sales_order_data.csv



2. Store raw data into hdfs location

hadoop fs -put /tmp/hive_class/sales_order_data.csv /tmp/

create new table

created table 
sales_order_data_csv_v1  in cloudera hive engine 

show tables

create table sales_order_data_csv_v1
(
ORDERNUMBER int,
QUANTITYORDERED int,
PRICEEACH float,
ORDERLINENUMBER int,
SALES float,
STATUS string,
QTR_ID int,
MONTH_ID int,
YEAR_ID int,
PRODUCTLINE string,
MSRP int,
PRODUCTCODE string,
PHONE string,
CITY string,
STATE string,
POSTALCODE string,
COUNTRY string,
TERRITORY string,
CONTACTLASTNAME string,
CONTACTFIRSTNAME string,
DEALSIZE string
)
row format delimited
fields terminated by ','
tblproperties("skip.header.line.count"="1")
; 

4. Load data from hdfs path into "sales_order_csv"

load data local inpath '/tmp/sales_data.csv' into table sales_order_data_csv_v1;


hive> set hive.cli.print.header = true;
to show headers in result of select statement.



create table sales_order_data_orc
(
ORDERNUMBER int,
QUANTITYORDERED int,
PRICEEACH float,
ORDERLINENUMBER int,
SALES float,
STATUS string,
QTR_ID int,
MONTH_ID int,
YEAR_ID int,
PRODUCTLINE string,
MSRP int,
PRODUCTCODE string,
PHONE string,
CITY string,
STATE string,
POSTALCODE string,
COUNTRY string,
TERRITORY string,
CONTACTLASTNAME string,
CONTACTFIRSTNAME string,
DEALSIZE string
)
stored as orc;

6. Load data from "sales_order_csv" into "sales_order_data_orc"
hive> from sales_order_csv_v1 insert overwrite table sales_order_data_orc select *;




a. Calculatye total sales per year
hive> select sum(sales) as tot_sales,year id from sales_order_data_orc group by year_id;

b. Find a product for which maximum orders were placed
with table1 as(
    select sum(quantityordered) as total_quantity,productline from sales_order_data_orc group by productline)
    ,table2 as(
    select max(total_quantity) as maximum_quantity from table1)
    select productline from table1 t1 inner join table2 t2 on t1.total_quantity=t2.maximum_quantity;

c. Calculate the total sales for each quarter
select sum(sales) as total_sales,qtr_id from sales_order_data_orc group by qtr_id;

d. In which quarter sales was minimum
with table1 as(
select sum(sales) as total_sales,qtr_id from sales_order_data_orc group by qtr_id),
table2 as(select min(total_sales) as minim_sales from table1)
Select qtr_id from table1 t1 inner join table2 t2 on t1.total_sales=t2.minim_sales;



e. In which country sales was maximum and in which country sales was minimum

f. Calculate quartelry sales for each city
select sum(sales),qtr_id,city from sales_order_data_orc group by city,qtr_id;

h. Find a month for each year in which maximum number of quantities were sold



